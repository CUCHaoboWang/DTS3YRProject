<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
        <TypeScriptExperimentalDecorators>True</TypeScriptExperimentalDecorators>
        <TypeScriptEmitDecoratorMetadata>True</TypeScriptEmitDecoratorMetadata>
    </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Core" Version="1.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.1" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\material.module.ts" />
    <None Remove="ClientApp\src\app\shared\components\stream\video.component.ts" />
    <None Remove="ClientApp\src\app\shared\components\toolbar\logo.component.ts" />
    <None Remove="ClientApp\src\app\shared\config\custom-cdk-overlay-container.ts" />
    <None Remove="ClientApp\src\app\shared\layout\video-layout.ts" />
    <None Remove="ClientApp\src\app\shared\matchers\username.ts" />
    <None Remove="ClientApp\src\app\shared\models\external-config.ts" />
    <None Remove="ClientApp\src\app\shared\models\user-model.ts" />
    <None Remove="ClientApp\src\app\shared\models\video-settings.ts" />
    <None Remove="ClientApp\src\app\shared\pipes\linkify.ts" />
    <None Remove="ClientApp\src\app\shared\pipes\tooltipList.pipe.ts" />
    <None Remove="ClientApp\src\app\shared\pipes\video-settings.pipe.ts" />
    <None Remove="ClientApp\src\app\shared\services\logger\logger.service.mock.ts" />
    <None Remove="ClientApp\src\app\shared\services\logger\logger.service.spec.ts" />
    <None Remove="ClientApp\src\app\shared\services\logger\logger.service.ts" />
    <None Remove="ClientApp\src\app\shared\services\utils\utils.service.mock.ts" />
    <None Remove="ClientApp\src\app\shared\services\utils\utils.service.spec.ts" />
    <None Remove="ClientApp\src\app\shared\services\utils\utils.service.ts" />
    <None Remove="ClientApp\src\app\shared\services\webrtc-firebase\firebase.interface.ts" />
    <None Remove="ClientApp\src\app\shared\services\webrtc-signalr\signalr.interface.ts" />
    <None Remove="ClientApp\src\app\shared\types\chat-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\device-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\icon-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\layout-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\linkify-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\logger-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\singal-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\storage-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\username-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\video-settings.ts" />
    <None Remove="ClientApp\src\app\shared\types\video-type.ts" />
    <None Remove="ClientApp\src\app\shared\types\webcomponent-config.ts" />
    <None Remove="ClientApp\src\assets\images\favicon.ico" />
    <None Remove="ClientApp\src\assets\images\favicon.png" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\src\assets\images\favicon.ico">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\src\assets\images\favicon.png">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\app-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\material.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\components\stream\video.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\components\toolbar\logo.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\config\custom-cdk-overlay-container.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\matchers\username.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\layout\video-layout.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\models\external-config.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\models\user-model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\shared\models\video-settings.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\pipes\linkify.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\pipes\tooltipList.pipe.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\pipes\video-settings.pipe.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\logger\logger.service.mock.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\logger\logger.service.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\logger\logger.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\utils\utils.service.mock.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\utils\utils.service.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\utils\utils.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\webrtc-firebase\firebase.interface.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\shared\services\webrtc-signalr\signalr.interface.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\chat-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\device-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\icon-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\linkify-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\logger-type.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\singal-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\storage-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\username-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\video-settings.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\layout-type.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\video-type.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\shared\types\webcomponent-config.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\src\app\shared\types\layout-type - Copy.js">
      <DependentUpon>layout-type.js</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\shared\types\layout-type - Copy.js.map">
      <DependentUpon>layout-type.js.map</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\shared\types\video-type - Copy %282%29.js">
      <DependentUpon>video-type.js</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\shared\types\video-type - Copy %282%29.js.map">
      <DependentUpon>video-type.js.map</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\shared\types\video-type - Copy - Copy.js">
      <DependentUpon>video-type - Copy.js</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\shared\types\video-type - Copy - Copy.js.map">
      <DependentUpon>video-type - Copy.js.map</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\shared\types\video-type - Copy.js">
      <DependentUpon>video-type.js</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\shared\types\video-type - Copy.js.map">
      <DependentUpon>video-type.js.map</DependentUpon>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
